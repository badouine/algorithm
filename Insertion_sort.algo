PROCEDURE swap(VAR eg, VAR ed: INTEGER)

VAR
    pass: INTEGER;  

BEGIN 
    // street of pass
    pass:= eg; 
    ep:= ed;
    ed:= pass;
END 


PROCEDURE insertion_sort(VAR tab: ARRAY_OF INTEGER)
VAR 
    i,j,card: INTEGER; 
BEGIN

    card:= tab.length;

FOR i FROM 0 TO card-1 STEP 1 DO 
    // Iterate in card
    FOR j FROM 0 TO card-i-1 STEP 1 DO 
        IF(tab[j] > tab[j+1]) THEN 
            pass(tab[j], tab[j+1]) // swap element
        END_IF
    END_FOR
END_FOR
    Write(tab , "become : " pass);
END







/* 

Objective
 
Insertion sort is a simple sorting algorithm that works the way we sort playing cards in our hands. Each time we take a new card we put it
in the right place in our hand.


Instructions


Each time work only with the first i-1 element from of the array
Pick element arr[i] and insert it into sorted sequence in the array from 0 to i-1.

 */